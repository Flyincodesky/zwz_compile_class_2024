/* opcode of machine instruction */
#define  I_END	  0x00
#define  I_NOP    0x01
#define  I_OUT    0x02
#define  I_LOD_0  0x10
#define  I_LOD_1  0x11
#define  I_LOD_2  0x12
#define  I_LOD_3  0x13
#define  I_LOD_4  0x14
#define  I_LOD_5  0x15
#define  I_STO_0  0x20
#define  I_STO_1  0x21
#define  I_STO_2  0x22
#define  I_STO_3  0x23
#define  I_ADD_0  0x30
#define  I_ADD_1  0x31
#define  I_SUB_0  0x40
#define  I_SUB_1  0x41
#define  I_MUL_0  0x50
#define  I_MUL_1  0x51
#define  I_DIV_0  0x60
#define  I_DIV_1  0x61
#define  I_TST_0  0x70
#define  I_JMP_0  0x80
#define  I_JMP_1  0x81
#define  I_JEZ_0  0x82
#define  I_JEZ_1  0x83
#define  I_JLZ_0  0x84
#define  I_JLZ_1  0x85
#define  I_JGZ_0  0x86
#define  I_JGZ_1  0x87
#define  I_MAX    0xFF

/*
1. **I_END**: 1个周期（退出指令）
2. **I_NOP**: 1个周期（无操作）
3. **I_OUT**: 2个周期（输出到终端）
4. **I_ADD_0**: 1个周期（寄存器和常量相加）
5. **I_ADD_1**: 1个周期（两个寄存器相加）
6. **I_SUB_0**: 1个周期（寄存器减去常量）
7. **I_SUB_1**: 1个周期（两个寄存器相减）
8. **I_MUL_0**: 2个周期（寄存器乘常量，乘法相对较慢）
9. **I_MUL_1**: 2个周期（两个寄存器相乘）
10. **I_DIV_0**: 3个周期（寄存器除常量，需要检查除0）
11. **I_DIV_1**: 3个周期（两个寄存器相除，需要检查除0）
12. **I_LOD_0**: 1个周期（将常量加载到寄存器）
13. **I_LOD_1**: 1个周期（将一个寄存器的值加载到另一个寄存器）
14. **I_LOD_2**: 2个周期（寄存器加常量的值加载到寄存器）
15. **I_LOD_3**: 4个周期（从内存加载四字节数据到寄存器）
16. **I_LOD_4**: 4个周期（从寄存器地址的内存加载四字节数据到寄存器）
17. **I_LOD_5**: 5个周期（从寄存器地址加常量的内存加载四字节数据到寄存器）
18. **I_STO_0**: 4个周期（常量存储到内存）
19. **I_STO_1**: 4个周期（寄存器值存储到内存）
20. **I_STO_2**: 5个周期（寄存器加常量的值存储到内存）
21. **I_STO_3**: 5个周期（寄存器值存储到寄存器地址加常量的内存）
22. **I_TST_0**: 1个周期（测试寄存器值）
23. **I_JMP_0**: 1个周期（跳转到常量地址）
24. **I_JMP_1**: 1个周期（跳转到寄存器地址）
25. **I_JEZ_0**: 1个周期（条件跳转到常量地址，根据标志）
26. **I_JEZ_1**: 1个周期（条件跳转到寄存器地址，根据标志）
27. **I_JLZ_0**: 1个周期（条件跳转到常量地址，根据标志）
28. **I_JLZ_1**: 1个周期（条件跳转到寄存器地址，根据标志）
29. **I_JGZ_0**: 1个周期（条件跳转到常量地址，根据标志）
30. **I_JGZ_1**: 1个周期（条件跳转到寄存器地址，根据标志）
31. **default**: 1个周期（错误处理）
*/